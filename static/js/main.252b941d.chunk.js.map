{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","containers/ErrorBoundary.js","containers/App.js","action.js","constant.js","reducers.js","components/Header.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","id","name","email","phone","onClick","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","aria-label","type","placeholder","onChange","ErrorBoundary","hasError","info","this","setState","props","children","Component","App","onRequestRobotss","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","initialStateSearch","initialStateRobots","Header","rootReducer","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.252b941d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email, phone, onClick }) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow pw2 shadow-5'  onClick={onClick}>\r\n\t\t\t<img alt='robot_one' src={`https://robohash.org/${name}?size=200x200`} />\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t\t<p>{phone}</p>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nconst CardList = ({ robots }) =>{\r\n\r\n\treturn(\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\trobots.map((user,i)=>{\r\n\t\t\t\t\t\treturn <Card className='tc' id={user.id} name={user.name} email={user.email} phone={user.phone} />\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n}\r\n\r\n// var CardList = createReactClass({\r\n\r\n// \tgetInitialState: function(){\r\n// \t\treturn {\r\n// \t\t\tactiveUser: {}\r\n// \t\t};\r\n// \t},\r\n\r\n// \tsaveActiveUser: function(user){\r\n// \t\tthis.setState({activeUser: user})\r\n// \t\tconsole.log(\"activeUser is : \", this.state.activeUser.id)\r\n// \t},\r\n\r\n// \trender: function() {\r\n// \t\treturn(\t\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t{<Current id='mov' currentState={this.state.activeUser} />}\r\n\t\t\t\t\t\r\n// \t\t\t\t\t<div className='tc ' >\r\n// \t\t\t\t\t<hr/>\r\n// \t\t\t\t\t{\r\n// \t\t\t\t\t\trobots.map((user,i)=>{\r\n// \t\t\t\t\t\t\treturn <Card keys={i} id={user.id} name={user.name} email={user.email} phone={user.phone} onClick={ (user)=> {this.saveActiveUser(robots[i])}} />\r\n// \t\t\t\t\t\t})\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n// \t\t\t\t</div>\r\n\t\t\t\t\r\n// \t\t);\r\n// \t}\r\n// })\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2 tc'>\r\n\t\t\t<input\r\n\t\t\t\taria-label='Search Robots' \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue tc' \r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search for robots'\r\n\t\t\t\t// value={searchField} \r\n\t\t\t\tonChange={searchChange} />\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Ooooops. Something went Wrong!</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport './App.css'\r\nimport { connect } from 'react-redux';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\n\r\nimport { setSearchField, requestRobotss } from '../action.js';\r\n\r\nconst mapStateToProps = state => {\r\n\tconsole.log(state)\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobotss: () => dispatch(requestRobotss())\t\t\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.onRequestRobotss();\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { searchField, onSearchChange, robots, isPending } = this.props;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t\t})\r\n\t\treturn isPending ? \r\n\t\t<h1 className='tc'>Loading ...</h1>:\r\n\t\t(\r\n\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CardList className='tc' robots={filteredRobots} />\t\t\t\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t);\t\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED,\r\n\tCHANGE_SEARCH_FIELD \r\n} from './constant.js'\r\n\r\nexport const setSearchField = (text) =>  ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n\t})\r\n\r\nexport const requestRobotss = () => (dispatch) => {\r\n\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING })\r\n\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> {return response.json()})\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }) )\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }) )\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'; ","import { CHANGE_SEARCH_FIELD } from './constant.js';\r\nimport {\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constant.js'\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, {isPending: true})\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { robots:action.payload, isPending: false })\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, {error:action.payload, isPending: true})\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React, {Component} from 'react';\r\n\r\nclass Header extends Component{\r\n\tshouldComponentUpdate(){\r\n\t\treturn true;\r\n\t}\r\n\trender(){\r\n\t\treturn <h1 className='tc f1 g' >the RoboFriends-Community</h1>\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './containers/App.js'\nimport './index.css'\nimport { searchRobots, requestRobots } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport Header from './components/Header.js';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<Provider store={store}>  \n  \t\t<Header />\t\n   \t\t<App  />\n \t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}